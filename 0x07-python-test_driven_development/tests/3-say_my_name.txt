How to Use 3-say_my_name
________________________

This modules defines a function ``say_my_name(first_name, last_name="")``.

Usage
____

``say_my_name(...)`` prints "My name is <first_name> <last_name>".

___

    >>> say_my_name = __import__('3-say_my_name').say_my_name
    >>> say_my_name("John", "Doe")
    My name is John Doe

___

    >>> say_my_name("Jane", "Doe")
    My name is Jane Doe

The parameter ```last_name``` is optional. If no last name is provided,
an empty string is printed instead.

___

    >>> say_my_name("John")
    My name is John 

Invalid Names
=============

The parameters ``first_name`` and ``last_name``` must be strings. Otherwise,
a TypeError is raised.

___

    >>> say_my_name(6, "James")
    Traceback (most recent call last):
    TypeError: first_name must be a string

___

    >>> say_my_name("Musa", ["Ali", "Sani"])
    Traceback (most recent call last):
    TypeError: last_name must be a string

___

    >>> say_my_name({"Sani": 6, "John": 23}, 7.7)
    Traceback (most recent call last):
    TypeError: first_name must be a string

___

    >>> say_my_name(None)
    Traceback (most recent call last):
    TypeError: first_name must be a string

At least one name must be provided.

___

    >>> say_my_name()
    Traceback (most recent call last):
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'
